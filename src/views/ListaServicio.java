/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import clases.ConexionBD;
import clases.repositorios.PersonaRepositorio;
import clases.repositorios.ServicioRepositorio;
import clases.repositorios.ViviendaRepositorio;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.ComboItem;
import models.Persona;
import models.Servicio;
import models.Vivienda;

/**
 *
 * @author j-aco
 */
public class ListaServicio extends javax.swing.JFrame {
    
    public String idSelected;
    /**
     * Creates new form ListaServicio
     */
    public ListaServicio() {
        initComponents();
        mostrarVivienda();
        cargarPersonas();
        mostrarServicio();
    }
    
    public void cargarPersonas(){
        try{
            PersonaRepositorio pRepo = new PersonaRepositorio();
            List<Persona> personas1 = pRepo.ListTipo("'ARRENDATARIO'");
            List<Persona> personas2 = pRepo.ListTipo("'ARRENDADOR'");
            for(Persona p:personas1){
                comboArrendatario.addItem(new ComboItem(p.nombres+" "+p.apellido_paterno, Integer.toString(p.id_persona)));
            }
            for(Persona p:personas2){
                comboArrendador.addItem(new ComboItem(p.nombres+" "+p.apellido_paterno, Integer.toString(p.id_persona)));
            }
        }
        catch(Exception e){
        }
    }
    
    public void mostrarServicio(){
            
        try {
            ServicioRepositorio servicioRepo = new ServicioRepositorio();
            List<Servicio> servicios = servicioRepo.List();
            DefaultTableModel DFT = (DefaultTableModel) tblServicio.getModel();
            DFT.setRowCount(0);
                for(Servicio s:servicios){
                    Vector v = new Vector();
                    for (int ii = 1; ii <= servicios.size(); ii++) {
                        v.add(s.id_servicio);
                        v.add(s.arrendador);
                        v.add(s.cliente);
                        v.add(s.fecha_acuerdo);
                        v.add(s.fecha_deposito);
                        v.add(s.fecha_entrega);
                        v.add(s.id_vivienda);                 
                    }
                DFT.addRow(v);
                }
            } catch (Exception e) {
                System.out.println(e);
        }
    }
    
    public void mostrarVivienda(){
            
        try {
            ViviendaRepositorio viviendaRepo = new ViviendaRepositorio();
            List<Vivienda> vivienda = viviendaRepo.List();
            DefaultTableModel DFT = (DefaultTableModel) tblVivienda.getModel();
            DFT.setRowCount(0);
                for(Vivienda vi:vivienda){
                    Vector v = new Vector();
                    for (int ii = 1; ii <= vivienda.size(); ii++) {
                        v.add(vi.id_vivienda);
                        v.add(vi.ciudad);
                        v.add(vi.distrito);
                        v.add(vi.direccion);
                        v.add(vi.referencia);
                        v.add(vi.tipo_vivienda);
                        v.add(vi.tipo_alquiler);
                        v.add(vi.persona);
                        v.add(vi.estado);                    
                    }
                DFT.addRow(v);
                }
            } catch (Exception e) {
                System.out.println(e);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblServicio = new javax.swing.JTable();
        inputFechaAcuerdo = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputFechaDeposito = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblVivienda = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        inputFechaEntrega = new javax.swing.JTextField();
        comboArrendatario = new javax.swing.JComboBox<>();
        comboArrendador = new javax.swing.JComboBox<>();
        inputVivienda = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Fecha de acuerdo");

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setText("Limpiar");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblServicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id de servicio", "Arrendatario", "Arrendador", "Fecha de acuerdo", "Fecha de deposito", "Fecha de entrega", "Id de vivienda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblServicioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblServicio);

        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setText("Servicio");

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel5.setText("Arrendatario");

        jLabel6.setText("Arrendador");

        jLabel7.setText("Fecha de Entrega");

        jLabel2.setText("Vivienda");

        inputFechaDeposito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFechaDepositoActionPerformed(evt);
            }
        });

        tblVivienda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id vivienda", "Ciudad", "Distrito", "Direccion", "Referencia", "Tipo vivienda", "Tipo contrato", "Propietario", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblVivienda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViviendaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblVivienda);

        jLabel3.setText("Fecha de depósito");

        comboArrendatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboArrendatarioActionPerformed(evt);
            }
        });

        comboArrendador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboArrendadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1288, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(50, 50, 50)
                                .addComponent(btnClear))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(inputFechaAcuerdo)
                                    .addComponent(inputFechaDeposito)
                                    .addComponent(inputFechaEntrega)
                                    .addComponent(comboArrendatario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboArrendador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inputVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 928, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate)
                                .addGap(41, 41, 41)
                                .addComponent(btnDelete)
                                .addGap(11, 11, 11)))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboArrendador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(comboArrendatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputFechaAcuerdo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(inputFechaDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(inputFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(inputVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        String arrendatario = comboArrendatario.getSelectedItem().toString();
        String arrendador = comboArrendador.getSelectedItem().toString();
        String fechaAcuerdo = inputFechaAcuerdo.getText();
        String fechaDeposito = inputFechaDeposito.getText();
        String fechaEntrega = inputFechaAcuerdo.getText();
        String vivienda = inputVivienda.getText();
        
        inputFechaAcuerdo.setBackground(Color.WHITE);
        inputFechaDeposito.setBackground(Color.WHITE);
        inputFechaAcuerdo.setBackground(Color.WHITE);
        inputVivienda.setBackground(Color.WHITE);
        
        if (fechaAcuerdo.isEmpty() || fechaDeposito.isEmpty() || fechaEntrega.isEmpty() || vivienda.isEmpty()){
            
            if(fechaAcuerdo.isEmpty()){
                inputFechaAcuerdo.setBackground(new Color(255, 153, 153));
            }
            if(fechaDeposito.isEmpty()){
                inputFechaDeposito.setBackground(new Color(255, 153, 153));
            }
            if(fechaEntrega.isEmpty()){
                inputFechaEntrega.setBackground(new Color(255, 153, 153));
            }
            if(vivienda.isEmpty()){
                inputVivienda.setBackground(new Color(255, 153, 153));
            }
        }else{
           ServicioRepositorio servicioRepo = new ServicioRepositorio();

            Servicio servicioToSave = new Servicio();
            servicioToSave.arrendador = arrendatario;
            servicioToSave.cliente = arrendador;
            servicioToSave.fecha_acuerdo = fechaAcuerdo;
            servicioToSave.fecha_deposito = fechaDeposito;
            servicioToSave.fecha_entrega = fechaEntrega;
            servicioToSave.id_vivienda = Integer.parseInt(vivienda);
        
            try {
                servicioRepo.crearServicio(servicioToSave);
                JOptionPane.showMessageDialog(null, "Se guardo exitosamente");
                mostrarServicio();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo guardar, intentelo de nuevo");
            } 
       }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        inputFechaAcuerdo.setText("");
        inputFechaDeposito.setText("");
        inputFechaEntrega.setText("");
        inputVivienda.setText("");
        mostrarServicio();
        mostrarVivienda();
        btnUpdate.setEnabled(false);
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String arrendatario = comboArrendatario.getSelectedItem().toString();
        String arrendador = comboArrendador.getSelectedItem().toString();
        String fechaAcuerdo = inputFechaAcuerdo.getText();
        String fechaDeposito = inputFechaDeposito.getText();
        String fechaEntrega = inputFechaAcuerdo.getText();
        String vivienda = inputVivienda.getText();
        
        inputFechaAcuerdo.setBackground(Color.WHITE);
        inputFechaDeposito.setBackground(Color.WHITE);
        inputFechaAcuerdo.setBackground(Color.WHITE);
        inputVivienda.setBackground(Color.WHITE);
        
        if (fechaAcuerdo.isEmpty() || fechaDeposito.isEmpty() || fechaEntrega.isEmpty() || vivienda.isEmpty()){
            
            if(fechaAcuerdo.isEmpty()){
                inputFechaAcuerdo.setBackground(new Color(255, 153, 153));
            }
            if(fechaDeposito.isEmpty()){
                inputFechaDeposito.setBackground(new Color(255, 153, 153));
            }
            if(fechaEntrega.isEmpty()){
                inputFechaEntrega.setBackground(new Color(255, 153, 153));
            }
            if(vivienda.isEmpty()){
                inputVivienda.setBackground(new Color(255, 153, 153));
            }
        }else{
            
           ServicioRepositorio servicioRepo = new ServicioRepositorio();

            Servicio servicioToSave = new Servicio();
            servicioToSave.id_servicio = Integer.parseInt(idSelected);
            servicioToSave.arrendador = arrendatario;
            servicioToSave.cliente = arrendador;
            servicioToSave.fecha_acuerdo = fechaAcuerdo;
            servicioToSave.fecha_deposito = fechaDeposito;
            servicioToSave.fecha_entrega = fechaEntrega;
            servicioToSave.id_vivienda = Integer.parseInt(vivienda);
        
            try {
                servicioRepo.actualizarServicio(servicioToSave);
                JOptionPane.showMessageDialog(null, "Se actualizó exitosamente");
                mostrarServicio();
            } catch (SQLException ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "No se pudo actualizar, intentelo de nuevo");
            } 
       }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblServicio.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un elemento de la tabla para eliminar");
        }
        else{
            try {
                ServicioRepositorio servicioRepo = new ServicioRepositorio();
                boolean delete = servicioRepo.eliminarServicio(Integer.parseInt(idSelected));
                if(delete){
                    inputFechaAcuerdo.setText("");;
                    inputFechaDeposito.setText("");;
                    inputFechaEntrega.setText("");;
                    inputVivienda.setText("");;
                    idSelected = null;
                    btnUpdate.setEnabled(false);
                    btnSave.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "Se eliminó exitosamente");
                    mostrarServicio();
                }
                else{
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar, intentelo de nuevo");
                }
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar, intentelo de nuevo");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void inputFechaDepositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFechaDepositoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFechaDepositoActionPerformed

    private void tblViviendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViviendaMouseClicked
        // TODO add your handling code here:
        int row = tblVivienda.getSelectedRow();
        if(row >= 0){
            
            String id = tblVivienda.getModel().getValueAt(row, 0).toString();
            idSelected = id;
            
            ViviendaRepositorio viviendaRepo = new ViviendaRepositorio();
            Vivienda v = viviendaRepo.Get(Integer.parseInt(id));
            inputVivienda.setText(id);
        }
    }//GEN-LAST:event_tblViviendaMouseClicked

    private void comboArrendadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboArrendadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboArrendadorActionPerformed

    private void tblServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblServicioMouseClicked
        // TODO add your handling code here:
        int row = tblServicio.getSelectedRow();
        if(row >= 0){
            btnUpdate.setEnabled(true);
            btnSave.setEnabled(false);
            String id = tblServicio.getModel().getValueAt(row, 0).toString();
            idSelected = id;
            
            ServicioRepositorio servicioRepo = new ServicioRepositorio();
            Servicio ser = servicioRepo.Get(Integer.parseInt(id));  
            
            comboArrendador.setSelectedItem(ser.arrendador);
            comboArrendatario.setSelectedItem(ser.cliente);
            inputFechaAcuerdo.setText(ser.fecha_acuerdo);
            inputFechaDeposito.setText(ser.fecha_deposito);
            inputFechaEntrega.setText(ser.fecha_entrega);
            inputVivienda.setText(String.valueOf(ser.id_vivienda));
        }
    }//GEN-LAST:event_tblServicioMouseClicked

    private void comboArrendatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboArrendatarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboArrendatarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaServicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<ComboItem> comboArrendador;
    private javax.swing.JComboBox<ComboItem> comboArrendatario;
    private javax.swing.JTextField inputFechaAcuerdo;
    private javax.swing.JTextField inputFechaDeposito;
    private javax.swing.JTextField inputFechaEntrega;
    private javax.swing.JTextField inputVivienda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblServicio;
    private javax.swing.JTable tblVivienda;
    // End of variables declaration//GEN-END:variables
}
